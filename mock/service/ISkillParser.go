// Automatically generated by MockGen. DO NOT EDIT!
// Source: service/ISkillParser.go

package mock_service

import (
	gomock "github.com/golang/mock/gomock"
	structures "github.com/moazzamk/moz-tech/structures"
)

// Mock of ISkillParser interface
type MockISkillParser struct {
	ctrl     *gomock.Controller
	recorder *_MockISkillParserRecorder
}

// Recorder for MockISkillParser (not exported)
type _MockISkillParserRecorder struct {
	mock *MockISkillParser
}

func NewMockISkillParser(ctrl *gomock.Controller) *MockISkillParser {
	mock := &MockISkillParser{ctrl: ctrl}
	mock.recorder = &_MockISkillParserRecorder{mock}
	return mock
}

func (_m *MockISkillParser) EXPECT() *_MockISkillParserRecorder {
	return _m.recorder
}

func (_m *MockISkillParser) ParseFromTags(tags *structures.UniqueSlice) *structures.UniqueSlice {
	ret := _m.ctrl.Call(_m, "ParseFromTags", tags)
	ret0, _ := ret[0].(*structures.UniqueSlice)
	return ret0
}

func (_mr *_MockISkillParserRecorder) ParseFromTags(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ParseFromTags", arg0)
}

func (_m *MockISkillParser) ParseFromDescription(description string) *structures.UniqueSlice {
	ret := _m.ctrl.Call(_m, "ParseFromDescription", description)
	ret0, _ := ret[0].(*structures.UniqueSlice)
	return ret0
}

func (_mr *_MockISkillParserRecorder) ParseFromDescription(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ParseFromDescription", arg0)
}
